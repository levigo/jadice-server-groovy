/*Copyright (c) 2015, levigo holding gmbh.All rights reserved.Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * Redistributions of source code must retain the above copyright notice,    this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright notice,    this list of conditions and the following disclaimer in the documentation   and/or other materials provided with the distribution. * Neither the name of levigo holding gmbh nor the names of its contributors   may be used to endorse or promote products derived from this software    without specific prior written permission.THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUTNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, ORPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.*/import com.levigo.jadice.server.nodes.worker.StreamScriptContextimport com.levigo.jadice.server.nodes.worker.StreamScriptContextimport com.levigo.jadice.server.script.groovy.StreamScriptSupportimport groovy.lang.Closureimport java.util.Listimport com.levigo.jadice.server.shared.types.*import com.levigo.jadice.server.util.*import com.levigo.jadice.io.*import com.lowagie.text.pdf.PdfReaderimport com.lowagie.text.pdf.PdfStamper/** *  With this script PDF properties such as "Title", "Subject", "Keywords", "Creator" *  and "Author" can be modified. * *  These values must be provided as keys of the parameter map pdfProperties. *  They might be null in order to clear existing entries. * *  This script uses iText, see also http://itextpdf.com/examples/iia.php?id=216 * */class PDFProperties {  // Values that must be defined as script parameters:  Map<String, String> pdfProperties  // Runtime values  StreamScriptContext streamContext  StreamScriptSupport support    def main(foo) {    support = new StreamScriptSupport(streamContext)    support.info "Overriding PDF Metadata"      def input    while (input = support.nextInput()) {            PdfReader reader = new PdfReader(input.inputStream)      StreamDescriptor sd = new StreamDescriptor('application/pdf', input.descriptor)      sd.fileName = input.descriptor.fileName      OutputStream os = streamContext.worker.outputBundle.addStream(sd)      PdfStamper stamper = new PdfStamper(reader, os)      Map<String, String> info = reader.getInfo()      info.putAll(pdfProperties)      stamper.setMoreInfo(info)      stamper.close()      reader.close()          } // End while (input=support.input())  }}